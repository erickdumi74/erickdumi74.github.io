{
  "games": {
    "netsouls": {
      "title": "Netsouls",
      "tagline": "ASCII roguelike · Souls‑flavored combat",
      "repo": "https://github.com/erickdumi74/netsouls",
      "about": {
        "intro": [
          "<strong>Netsouls</strong> is a roguelike dungeon-crawler with a Soulslike heartbeat… and a potato for a hero.",
          "You are Sir Atarms, the noble (and suspiciously starchy) defender of the Drawer Realm. Armed with whatever pointy stick, rusty cleaver, or bent shield you can find, you descend into the depths where fallen echoes whisper and enemies do not politely take turns.",
          "There are no hunger timers here — only stamina, timing, and your own persistence. Death is part of the loop; every run teaches you more about your foes, your gear, and why on earth a potato is swinging an axe in the first place.",
          "Built entirely in Python with ASCII graphics, Netsouls is fast to run, quick to restart, and endlessly replayable. It’s the kind of game that will make you say “one more run” until the sun comes up… or until you get mashed.",
          "Pattern‑driven combat in pure terminal. Directional attacks, rotating shields, stamina delay — tight and readable."
        ]
      },
      "loresnapshot": {
        "optional": true,
        "text": "In the Starchborn Age, Echoes are the memory of the world — currency, power, and life itself. Sir Atarms, the Potato Knight, roams shifting realms where death is only a setback, but every return leaves a scar. Some seek the First Thread to master the Netsouls. He just seeks to endure."
      },
      "status": {
        "version": "0.142",
        "state": "In development",
        "items": [
          "Core loop running with live HUD and enemy death flow.",
          "Entity‑based engine (player, enemies, shields/weapons/armor, items... all decoupled)",
          "Combat mediator, stamina regen delay",
          "Compressed HP bars for clean HUD",
          "Real time HUD displaying user and nearby enemies.",
          "Real time weapon/armor/shield switch with real time stats update.",
          "Player armor defenses taken into consideration during enemy attacks",
          "Echo (currency) drop coupled to the player. No Bloodborne type enemies picking up your precious Echoes.",
          "Enemy/Player combat handled via mediator.",
          "Devlog entries available and <em>The Making of Netsouls</em> will land soon."
        ]
      },
      "howto": {
        "flavor": "Keyboard‑only. Souls‑flavored timing. ASCII swagger.",
        "installblock": "$ python --version   # 3.10+\n# if on Windows and it's your first time install curses\n$ python -m pip install windows-curses  \n$ python main.py",
        "help": "In‑game help: press \"?\".",
        "sections": [
          {"title":"Movement","items":[["i","Up"],["k","Down"],["j","Left"],["l","Right"]],"tag":"You can’t move into occupied tiles."},
          {"title":"Combat","items":[["e","Attack Up"],["d","Attack Down"],["s","Attack Left"],["f","Attack Right"]]},
          {"title":"Shields","items":[["Space then e/d/s/f","raise/lower shield in that direction"]],"tag":"Press Space first to arm the shield, then a direction."},
          {"title":"Gear Switching","items":[["r","Switch weapon"],["w","Switch shield"],["g","Switch armor"]],"tag":"You can switch gear mid‑fight."},
          {"title":"Death & Respawn","items":[["Esc","Respawn (only when dead)"]]},
          {"title":"Tips","bullets":[
            "Stamina matters — attacks/defenses can delay regen.",
            "Positioning beats face‑tanking. Watch enemy arcs.",
            "Read the HUD; enemy cues are there for a reason."
          ],
          "footer":"Bindings: i/k/j/l · e/d/s/f · Space+dir · r/w/g · Esc"}
        ]
      },
      "screens": [
        {"image":"../../assets/netsouls/screenshots/ns01_enemy.png", "alt":"First encounter — Potato Knight meets a blob (HUD visible).", "caption":"First steps into the unknown… and something’s already watching."},
        {"image":"../../assets/netsouls/screenshots/ns02_dead.png", "alt":"You died — Echoes dropped on the floor.", "caption":"One bad dodge. A pile of dropped Echoes. Lesson learned."},
        {"image":"../../assets/netsouls/screenshots/ns03_resurrected_sd.png", "alt":"Resurrected — Echoes waiting to be recovered.", "caption":"Back from the void. Echoes still waiting."},
        {"image":"../../assets/netsouls/screenshots/ns04_rt_action.png", "alt":"Training ground chaos — blob swarm around the Dummy.", "caption":"Every blob in the realm, one indestructible Dummy… and me."}
      ],
      "devlogs": [
        "[WIP]: windows curses validation",
        "[WIP]: items gating by stats",
        "[WIP]: shield defense rotation logic (light/medium/heavy)",
        "[Planned]: in-game help",
        "[Planned]: double buffer to stop flickering on Linux",
        "[Planned]: add health flask and upgrade concept (names to be determined)",
        "[Planned]: enemies blink/color before attack",
        "[Planned]: reduce nearby enemies HUD filter - too many enemies go out of screen",
        "[Planned]: add dash",
        "[Planned]: add rooms",
        "[Planned]: add npcs",
        "[Planned]: add items"
      ],
      "contribute": {
        "discussion_link": "https://github.com/erickdumi74/netsouls/discussions"
      }
    },

    "vellum": {
      "title": "Vellum",
      "tagline": "Gothic terminal puzzle game · In progress",
      "repo": "https://github.com/erickdumi74/vellum",
      "about": {
        "intro": [
          "Vellum is a narrative puzzle game with deep lore, modular verbs, and deliberate pacing. Built in Python to emphasize clarity and immersion."
        ],
        "items": [
          "Puzzle design paced for discovery, not timers.",
          "Modular engine with verbs, items, and rooms encapsulated.",
          "Narrative driven immersive story telling."
        ]
      },
      "loresnapshot": {
        "optional": true,
        "text": "Dr. Alaric Vellum chased a geometry of power he could almost name. The manor remembers. The mirrors remember more."
      },
      "status": {
        "version": "0.60",
        "state": "In development",
        "items": [
          "Incomplete but playable version available for download. Missing final puzzle.",
          "Verbs fully functional and modularized. Engines being called by the main game loop.",
          "All puzzles states corrected and working.",
          "Devlog entries available and <em>The Making of Vellum</em> will land soon."
        ]
      },
      "howto": {
        "flavor": "Keyboard-only. Gothic intrigue. Puzzles that whisper before they bite.",
        "installblock": "$ python --version   # 3.10+\n$ python game.py",
        "help": "In-game help: type help.",
        "sections": [
          {"title":"Exploration","items":[["look or look around","survey the room"],["examine <item>","study something closely (descriptions may evolve based on progress)"]]},
          {"title":"Inventory","items":[["take <item>","pick up an item (if possible)"],["inventory ","list what you’re carrying"]]},
          {"title":"Interaction","items":[["use <item> on <target>","apply an item to something"],["turn <item> <direction> ","some objects turn left or right"],["enter <door or passage>","move through doors or passages"]]},
          {"title":"Input","items":[["type <code>","for keypads, consoles, or terminals"],["say <phrase>","certain locks respond to spoken words"]]},
          {
            "title":"Game Management",
            "items":[
              ["save <slot>","save to slots 1–4"],
              ["load <slot>","load from slots 1–4"],
              ["delete <slot>","delete a save"],
              ["help","list commands"],
              ["credits","show credits"],
              ["quit or exit","leave the game"]
            ]
          },
          {"title":"Tips","bullets":[
            "Examine often — clues can unlock only after related discoveries.",
            "Details matter — phrases, symbols, and wording may be important later.",
            "Progress is layered — items in one room often resolve puzzles elsewhere.",
            "The game nudges, but rarely tells — agency over autopilot."
          ],
          "footer":"Core verbs: look · examine · take · inventory · use … on … · turn … left/right · enter … · type … · say … · save/load/delete · saves · help · credits · quit/exit"}
        ]
      },
      "screens": [
        {"image":"../../assets/vellum/screenshots/vel01.png", "alt":"Study initial interactions.", "caption":"Study - early interactions."},
        {"image":"../../assets/vellum/screenshots/vel02.png", "alt":"Hallway note only visible after examine plaque.", "caption":"Hallway - checking state logic. Note only visible after examine plaque."},
        {"image":"../../assets/vellum/screenshots/vel03.png", "alt":"Secret Chamber mirror interaction loop.", "caption":"Secret Chamber - testing mirror interaction loop."},
        {"image":"../../assets/vellum/screenshots/vel04.png", "alt":"Lab test prism activation.", "caption":"Lab - test prism activation."}
      ],
      "devlogs": [
        "[WIP] Object‑oriented refactor: items_data per room; alias resolver overhaul.",
        "[WIP] Lore intensity: add more description to room items and interactions (take, poke, use, examine).",
        "[WIP] Final puzzle design: final room mechanics, ethical fork, escape route, machine & lore integration.",
        "[Planned] Structural refactor: Move each file to a directory for encapsulation and clarity.",
        "[Planned] Public build notes and changelog snippets.",
        "[Planned] Generate and upload terminal screen shots."
      ],
      "contribute": {
        "discussion_link": "https://github.com/erickdumi74/vellum/discussions"
      }
    },

    "terminal-descent": {
      "title": "Terminal Descent",
      "tagline": "Minimalist moon‑lander · Skill over luck",
      "repo": "https://github.com/erickdumi74/terminal-descent",
      "about": {
        "intro": [
          "A tiny terminal lander: throttle, gravity, fuel. No fluff—just descent math and your nerves."
        ],
        "items": [
          "Readable stats: altitude, vertical speed, fuel.",
          "Difficulty presets (engine efficiency & gravity).",
          "Win/Crash states with clean feedback.",
          "Uses simplified physics, not a full simulator — do not attempt real landings with this or pilots will die!"
        ]
      },
      "loresnapshot": {
        "optional": false,
        "text": "Dr. Alaric Vellum chased a geometry of power he could almost name. The manor remembers. The mirrors remember more."
      },
      "status": {
        "version": "1.0",
        "state": "Playable prototype",
        "items": [
          "Complete game available for download."
        ]
      },
      "howto": {
        "flavor": "Keyboard-only. Precision thrust at 1 second intervals. Gravity with an attitude.",
        "installblock": "$ python --version   # 3.10+\n$ python game.py",
        "help": "In-game help: you’re on your own.",
        "sections": [
          {"title":"Flight Controls","items":[["Enter a number","amount of thrust to apply this turn"],["q","quit mid-descent"]]},
          {"title":"Objective","bullets":[
            "Manage your fuel and thrust to counter gravity.",
            "Touch down at a safe speed <strong>(<= 5 m/s)</strong>.",
            "Run out of altitude at high speed and you’ll crater."
          ]},
          {"title":"Tips","bullets":[
            "Examine often — clues can unlock only after related discoveries.",
            "Small thrust adjustments can be fun, but wastes precious fuel. Time bursts effectively.",
            "Watch both speed and altitude — the ground comes quick at high speeds."
          ],
          "footer":"Core inputs: thrust number · q to quit"}
        ]
      },
      "screens": [
        {"image":"../../assets/terminal-descent/screenshots/term01.png", "alt":"Easy with low gravity.", "caption":"Easy with low gravity is just too easy..."},
        {"image":"../../assets/terminal-descent/screenshots/term02.png", "alt":"Hard with high gravity.", "caption":"...however hard with high gravity is not!"}
      ],
      "devlogs": [
        "[Planned] Add more \"realistic\" physics. Currently Terminal Descent uses a simplified thrust model for gameplay purposes."

        
      ],
      "contribute": {
        "discussion_link": "https://github.com/erickdumi74/terminal-descent/discussions"
      }
    }
  }
}

